import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
import useLocalStorage from './hooks/useLocalStorage';

// --- THEME CONTEXT ---
type Theme = 'light' | 'dark';

interface ThemeContextType {
  theme: Theme;
  toggleTheme: () => void;
}

const ThemeContext = createContext<ThemeContextType | undefined>(undefined);

export const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const theme: Theme = 'light';

  useEffect(() => {
    const root = window.document.documentElement;
    root.classList.remove('dark');
    root.classList.add('light');
  }, []);

  const toggleTheme = () => {
    // No-op. Dark mode is removed.
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
};

export const useTheme = () => {
  const context = useContext(ThemeContext);
  if (context === undefined) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  return context;
};

// --- LANGUAGE CONTEXT ---
type Language = 'en' | 'vi';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: keyof typeof translations['en'], ...args: (string | number)[]) => string;
}

const translations = {
  en: {
    headerTitle: "MemoryCare",
    navHome: "Home",
    navMemoryLog: "Memory Log",
    navPlanner: "Planner",
    navLocation: "Location",
    navMyStory: "My Story",
    navSettings: "Settings",
    footerText: "MemoryCare Â© {year}",
    language: "Language",
    welcomeTitle: "Welcome to MemoryCare",
    welcomeSubtitle: "Your personal assistant for daily living.",
    welcomeMessage: "This application is designed to help you manage your day, remember important information, and stay connected.",
    featureMemoryLogTitle: "Memory Log",
    featureMemoryLogDesc: "Keep track of loved ones and daily thoughts.",
    featurePlannerTitle: "Activity Planner",
    featurePlannerDesc: "Schedule your daily activities with reminders.",
    featureLocationTitle: "Location Services",
    featureLocationDesc: "Get help with navigation and stay safe.",
    reminderTitle: "A Gentle Reminder",
    reminderText: "Take each day one step at a time. We are here to support you. If you need help, please reach out to a caregiver or family member.",
    pageTitleMemoryLog: "Memory Log",
    pageSubtitleMemoryLog: "Remember important people and record your daily thoughts.",
    personAddedSuccess: "{name} added successfully!",
    personUpdatedSuccess: "{name} updated successfully.",
    personDeletedInfo: "Person deleted.",
    confirmDeletePerson: "Are you sure you want to delete this person?",
    journalSavedSuccess: "Journal entry saved!",
    journalNoSpeechInfo: "No speech detected to save.",
    confirmDeleteJournal: "Are you sure you want to delete this journal entry?",
    journalDeletedInfo: "Journal entry deleted.",
    ttsNotSupportedError: "Text-to-speech is not supported on this device.",
    ttsLanguageUnavailableError: "A native voice for the selected language is not available on your device. Speech functionality is limited.",
    peopleSectionTitle: "People",
    addPersonButton: "Add Person",
    noPeopleYet: 'No people added yet. Click "Add Person" to get started.',
    recallButton: "Recall",
    editButton: "Edit",
    deleteButton: "Delete",
    personRecallSpeech: "This is {name}, who is your {relationship}. {keyInfo}",
    journalSectionTitle: "Daily Journal",
    journalDescription: "Record your thoughts, feelings, or activities for the day using your voice.",
    speechNotSupported: "Speech recognition is not supported in your browser.",
    listeningPlaceholder: "Listening...",
    recordedThoughtsPlaceholder: "Your recorded thoughts will appear here...",
    startRecordingButton: "Start Recording",
    stopRecordingButton: "Stop Recording",
    saveEntryButton: "Save Entry",
    pastEntriesTitle: "Past Entries:",
    readAloudButton: "Read Aloud",
    modalAddPersonTitle: "Add New Person",
    modalEditPersonTitle: "Edit {name}",
    formNameLabel: "Name",
    formRelationshipLabel: "Relationship",
    formPhotoUrlLabel: "Photo URL (e.g., https://i.pravatar.cc/150)",
    formKeyInfoLabel: "Key Information",
    formCancelButton: "Cancel",
    formAddButton: "Add Person",
    formUpdateButton: "Update Person",
    formRequiredAlert: "Name and relationship are required.",
    pageTitlePlanner: "Daily Activity Planner",
    pageSubtitlePlanner: "Schedule your activities and get timely reminders.",
    activityAddedSuccess: 'Activity "{name}" added.',
    activityUpdatedSuccess: 'Activity "{name}" updated.',
    activityDeletedInfo: "Activity deleted.",
    confirmDeleteActivity: "Are you sure you want to delete this activity?",
    remindSentInfo: 'Reminder for "{name}" sent.',
    ttsAlertMessage: "Text-to-speech not supported. Showing alert instead.",
    activityReminderSpeech: "Reminder: It's time for {name} at {time}. {description}",
    addActivityButton: "Add Activity",
    noActivitiesYet: 'No activities scheduled. Click "Add Activity" to plan your day.',
    remindButton: "Remind",
    modalAddActivityTitle: "Add New Activity",
    modalEditActivityTitle: "Edit Activity",
    formActivityNameLabel: "Activity Name",
    formTimeLabel: "Time (HH:MM)",
    formDescriptionLabel: "Description (Optional)",
    formRecurringLabel: "Recurring Activity",
    formAddActivityButton: "Add Activity",
    formUpdateActivityButton: "Update Activity",
    formTimeRequiredAlert: "Activity name and time are required.",
    pageTitleLocation: "Location Services",
    pageSubtitleLocation: "Use the interactive map to find your way.",
    locationRefreshedSuccess: "Current location updated.",
    locationError: "Error getting location: {message}",
    homeSetSuccess: "Home location saved!",
    homeSetSpeech: "Home location has been set.",
    homeSetError: "Could not set home location. Current location unknown.",
    guideHomeError: "Cannot guide home, current location unknown. Try refreshing location.",
    guideHomeNotSetInfo: "Home location is not set. Please set it first.",
    destinationMissingInfo: "Please enter a destination.",
    notifyFamilySuccess: "Simulated: Notifying your family at {emails} that you are leaving.",
    notifyFamilyNoEmails: "No family emails found. Please add contacts in Family Settings to send notifications.",
    currentLocationTitle: "Current Location",
    findingLocation: "Finding your location...",
    latitude: "Latitude",
    longitude: "Longitude",
    refreshLocationButton: "Refresh Location",
    homeSettingsTitle: "Home Settings",
    homeSetLocationInfo: "Home is set to: Lat {lat}, Lon {lon}",
    homeNotSetInfo: 'Home location not set. Go to your home and click "Set Current Location as Home".',
    setHomeButton: "Set Current Location as Home",
    saveLocationButton: "Save This Spot",
    modalSaveLocationTitle: "Save Current Location",
    modalEditLocationTitle: "Edit Location Name",
    formLocationNameLabel: "Location Name",
    formLocationNamePlaceholder: "e.g., Park Entrance, Library",
    formSaveLocationButton: "Save Location",
    formUpdateLocationButton: "Update Name",
    locationNameRequired: "Location name is required.",
    locationSavedSuccess: 'Location "{name}" saved successfully.',
    savedLocationUpdatedSuccess: 'Location "{name}" updated successfully.',
    locationDeletedInfo: "Saved location has been deleted.",
    confirmDeleteLocation: 'Are you sure you want to delete the saved location "{name}"?',
    savedPlacesSectionTitle: "My Saved Places",
    noSavedPlaces: "You haven't saved any places yet. Use the 'Save This Spot' button to add one.",
    guideHereButton: "Guide Me Here",
    navigationHelpTitle: "Route Planner",
    guideHomeButton: "Guide Me Home",
    destinationLabel: "Where do you want to go?",
    destinationPlaceholder: "e.g., Post Office, Doctor's Clinic",
    guideToDestinationButton: "Guide to Destination",
    gettingDirections: "Calculating route...",
    directionsTitle: "Route Steps:",
    readDirectionsButton: "Read Directions",
    safetyActionsTitle: "Safety Actions",
    notifyFamilyButton: "Notify Family",
    notifyFamilyEmailSubject: "Location Update from MemoryCare",
    notifyFamilyEmailBody: "I am sharing my current location.\nLatitude: {lat}\nLongitude: {lon}\n\nView on Google Maps: https://www.google.com/maps?q={lat},{lon}",
    mapError: "Could not load the map. Please check your connection and try again.",
    mapApiKeyError: "Goong API key (GOONG_API_KEY) is not configured. This is different from the Gemini key.",
    geocodeError: "Could not find the location '{destination}'. Please try a different name or address.",
    directionsError: "Could not calculate a route. The destination may be unreachable.",
    pageTitleSettings: "Settings",
    pageSubtitleSettings: "Manage general settings, contacts, and application data.",
    addFamilyEmailButton: "Add Email",
    familyEmailInputPlaceholder: "Family member's email",
    noFamilyEmails: "No family members have been added yet.",
    familyEmailAddedSuccess: "{email} has been added to your family list.",
    familyEmailExistsError: "{email} is already in the list.",
    familyEmailInvalidError: "Please enter a valid email address.",
    familyEmailDeletedInfo: "{email} has been removed from the list.",
    confirmDeleteEmail: "Are you sure you want to remove {email}?",
    sharePlanButton: "Share Plan",
    sharePlanSuccess: "Simulated: Today's plan has been sent to {emails}.",
    sharePlanNoEmails: "No family emails found. Please add contacts in Family Settings to share your plan.",
    sharePlanEmailSubject: "Daily Plan from MemoryCare",
    sharePlanEmailBodyHeader: "Here is the schedule for today:\n\n",
    familyContactsSectionTitle: "Family Contacts",
    dataManagementTitle: "Data Management",
    dataManagementSubtitle: "Backup your data to a file or restore it from a backup.",
    exportDataButton: "Export Data",
    importDataButton: "Import Data",
    importConfirmTitle: "Confirm Import",
    importConfirmMessage: "Choose how to import the data. 'Merge' will add new items and update existing ones from the file. 'Overwrite' will delete all current data and replace it with the backup.",
    mergeDataButton: "Merge Data",
    overwriteDataButton: "Overwrite All Data",
    importSuccessMerge: "Data merged successfully! The app will now reload.",
    importSuccessOverwrite: "Data overwritten successfully! The app will now reload.",
    importErrorInvalidFile: "Import failed. The selected file is not a valid MemoryCare backup file.",
    importErrorReadFile: "Import failed. Could not read the selected file.",
    aiWelcomeMessage: "Hello! I'm your friendly assistant. How can I help you remember something today?",
    aiPlaceholder: "Ask me a question...",
    pageTitleMyStory: "My Story",
    pageSubtitleMyStory: "A living story of your life, updated with each memory you share.",
    myStoryAIQuestionTitle: "A Question for Today",
    myStoryYourAnswerTitle: "Your Answer",
    myStoryAnswerPlaceholder: "Share your thoughts and memories here...",
    myStorySaveAndUpdateButton: "Update My Story",
    myStoryTitle: "My Life Story",
    myStoryInitialStory: "Your story will be written here as you answer the questions. Let's begin by answering the first question.",
    myStoryLoadingStory: "Weaving your memories into a beautiful story...",
    myStoryLoadingQuestion: "Thinking of a new question for you...",
    myStoryMicrophoneButtonStart: "Record Answer",
    myStoryMicrophoneButtonStop: "Stop Recording",
  },
  vi: {
    headerTitle: "MemoryCare",
    navHome: "Trang Chá»§",
    navMemoryLog: "Nháº­t KÃ½",
    navPlanner: "Káº¿ Hoáº¡ch",
    navLocation: "Vá» TrÃ­",
    navMyStory: "CÃ¢u Chuyá»n Cá»§a TÃ´i",
    navSettings: "CÃ i Äáº·t",
    footerText: "MemoryCare Â© {year}",
    language: "NgÃ´n ngá»¯",
    welcomeTitle: "ChÃ o má»«ng Äáº¿n vá»i MemoryCare",
    welcomeSubtitle: "Trá»£ lÃ½ cÃ¡ nhÃ¢n cho cuá»c sá»ng hÃ ng ngÃ y cá»§a báº¡n.",
    welcomeMessage: "á»¨ng dá»¥ng nÃ y ÄÆ°á»£c thiáº¿t káº¿ Äá» giÃºp báº¡n quáº£n lÃ½ ngÃ y cá»§a mÃ¬nh, ghi nhá» thÃ´ng tin quan trá»ng vÃ  luÃ´n káº¿t ná»i.",
    featureMemoryLogTitle: "Nháº­t KÃ½",
    featureMemoryLogDesc: "Theo dÃµi nhá»¯ng ngÆ°á»i thÃ¢n yÃªu vÃ  nhá»¯ng suy nghÄ© hÃ ng ngÃ y.",
    featurePlannerTitle: "Káº¿ Hoáº¡ch Hoáº¡t Äá»ng",
    featurePlannerDesc: "LÃªn lá»ch cÃ¡c hoáº¡t Äá»ng hÃ ng ngÃ y cá»§a báº¡n vá»i lá»i nháº¯c.",
    featureLocationTitle: "Dá»ch Vá»¥ Vá» TrÃ­",
    featureLocationDesc: "Nháº­n trá»£ giÃºp vá» Äiá»u hÆ°á»ng vÃ  giá»¯ an toÃ n.",
    reminderTitle: "Má»t Lá»i Nháº¯c Nháº¹ NhÃ ng",
    reminderText: "HÃ£y thá»±c hiá»n má»i ngÃ y tá»«ng bÆ°á»c má»t. ChÃºng tÃ´i á» ÄÃ¢y Äá» há» trá»£ báº¡n. Náº¿u báº¡n cáº§n giÃºp Äá»¡, vui lÃ²ng liÃªn há» vá»i ngÆ°á»i chÄm sÃ³c hoáº·c thÃ nh viÃªn gia ÄÃ¬nh.",
    pageTitleMemoryLog: "Nháº­t KÃ½",
    pageSubtitleMemoryLog: "Ghi nhá» nhá»¯ng ngÆ°á»i quan trá»ng vÃ  ghi láº¡i nhá»¯ng suy nghÄ© hÃ ng ngÃ y cá»§a báº¡n.",
    personAddedSuccess: "ÄÃ£ thÃªm {name} thÃ nh cÃ´ng!",
    personUpdatedSuccess: "ÄÃ£ cáº­p nháº­t {name} thÃ nh cÃ´ng.",
    personDeletedInfo: "ÄÃ£ xÃ³a ngÆ°á»i.",
    confirmDeletePerson: "Báº¡n cÃ³ cháº¯c muá»n xÃ³a ngÆ°á»i nÃ y khÃ´ng?",
    journalSavedSuccess: "ÄÃ£ lÆ°u bÃºt kÃ½!",
    journalNoSpeechInfo: "KhÃ´ng phÃ¡t hiá»n giá»ng nÃ³i Äá» lÆ°u.",
    confirmDeleteJournal: "Báº¡n cÃ³ cháº¯c muá»n xÃ³a má»¥c nháº­t kÃ½ nÃ y khÃ´ng?",
    journalDeletedInfo: "ÄÃ£ xÃ³a má»¥c nháº­t kÃ½.",
    ttsNotSupportedError: "Chuyá»n vÄn báº£n thÃ nh giá»ng nÃ³i khÃ´ng ÄÆ°á»£c há» trá»£ trÃªn thiáº¿t bá» nÃ y.",
    ttsLanguageUnavailableError: "Thiáº¿t bá» cá»§a báº¡n khÃ´ng cÃ³ sáºµn giá»ng nÃ³i báº£n Äá»a cho ngÃ´n ngá»¯ ÄÃ£ chá»n. Chá»©c nÄng giá»ng nÃ³i bá» háº¡n cháº¿.",
    peopleSectionTitle: "Má»i ngÆ°á»i",
    addPersonButton: "ThÃªm NgÆ°á»i",
    noPeopleYet: 'ChÆ°a cÃ³ ai ÄÆ°á»£c thÃªm. Nháº¥p vÃ o "ThÃªm NgÆ°á»i" Äá» báº¯t Äáº§u.',
    recallButton: "Gá»£i Nhá»",
    editButton: "Sá»­a",
    deleteButton: "XÃ³a",
    personRecallSpeech: "ÄÃ¢y lÃ  {name}, lÃ  {relationship} cá»§a báº¡n. {keyInfo}",
    journalSectionTitle: "Nháº­t KÃ½ HÃ ng NgÃ y",
    journalDescription: "Ghi láº¡i suy nghÄ©, cáº£m xÃºc hoáº·c hoáº¡t Äá»ng trong ngÃ y báº±ng giá»ng nÃ³i cá»§a báº¡n.",
    speechNotSupported: "Nháº­n dáº¡ng giá»ng nÃ³i khÃ´ng ÄÆ°á»£c há» trá»£ trong trÃ¬nh duyá»t cá»§a báº¡n.",
    listeningPlaceholder: "Äang nghe...",
    recordedThoughtsPlaceholder: "Nhá»¯ng suy nghÄ© ÄÃ£ ghi cá»§a báº¡n sáº½ xuáº¥t hiá»n á» ÄÃ¢y...",
    startRecordingButton: "Báº¯t Äáº§u ghi Ã¢m",
    stopRecordingButton: "Dá»«ng ghi Ã¢m",
    saveEntryButton: "LÆ°u Má»¥c",
    pastEntriesTitle: "CÃ¡c má»¥c trÆ°á»c ÄÃ¢y:",
    readAloudButton: "Äá»c To",
    modalAddPersonTitle: "ThÃªm NgÆ°á»i Má»i",
    modalEditPersonTitle: "Sá»­a thÃ´ng tin {name}",
    formNameLabel: "TÃªn",
    formRelationshipLabel: "Má»i quan há»",
    formPhotoUrlLabel: "URL áº¢nh (vÃ­ dá»¥: https://i.pravatar.cc/150)",
    formKeyInfoLabel: "ThÃ´ng Tin ChÃ­nh",
    formCancelButton: "Há»§y",
    formAddButton: "ThÃªm NgÆ°á»i",
    formUpdateButton: "Cáº­p nháº­t",
    formRequiredAlert: "TÃªn vÃ  má»i quan há» lÃ  báº¯t buá»c.",
    pageTitlePlanner: "Káº¿ Hoáº¡ch Hoáº¡t Äá»ng HÃ ng NgÃ y",
    pageSubtitlePlanner: "LÃªn lá»ch cÃ¡c hoáº¡t Äá»ng vÃ  nháº­n lá»i nháº¯c ká»p thá»i.",
    activityAddedSuccess: 'ÄÃ£ thÃªm hoáº¡t Äá»ng "{name}".',
    activityUpdatedSuccess: 'ÄÃ£ cáº­p nháº­t hoáº¡t Äá»ng "{name}".',
    activityDeletedInfo: "ÄÃ£ xÃ³a hoáº¡t Äá»ng.",
    confirmDeleteActivity: "Báº¡n cÃ³ cháº¯c muá»n xÃ³a hoáº¡t Äá»ng nÃ y khÃ´ng?",
    remindSentInfo: 'ÄÃ£ gá»­i lá»i nháº¯c cho "{name}".',
    ttsAlertMessage: "Chuyá»n vÄn báº£n thÃ nh giá»ng nÃ³i khÃ´ng ÄÆ°á»£c há» trá»£. Thay vÃ o ÄÃ³ hiá»n thá» cáº£nh bÃ¡o.",
    activityReminderSpeech: "Nháº¯c nhá»: ÄÃ£ Äáº¿n giá» cho {name} lÃºc {time}. {description}",
    addActivityButton: "ThÃªm Hoáº¡t Äá»ng",
    noActivitiesYet: 'ChÆ°a cÃ³ hoáº¡t Äá»ng nÃ o ÄÆ°á»£c lÃªn lá»ch. Nháº¥p vÃ o "ThÃªm Hoáº¡t Äá»ng" Äá» lÃªn káº¿ hoáº¡ch cho ngÃ y cá»§a báº¡n.',
    remindButton: "Nháº¯c nhá»",
    modalAddActivityTitle: "ThÃªm Hoáº¡t Äá»ng Má»i",
    modalEditActivityTitle: "Sá»­a Hoáº¡t Äá»ng",
    formActivityNameLabel: "TÃªn Hoáº¡t Äá»ng",
    formTimeLabel: "Thá»i gian (HH:MM)",
    formDescriptionLabel: "MÃ´ táº£ (TÃ¹y chá»n)",
    formRecurringLabel: "Hoáº¡t Äá»ng láº·p láº¡i",
    formAddActivityButton: "ThÃªm Hoáº¡t Äá»ng",
    formUpdateActivityButton: "Cáº­p Nháº­t Hoáº¡t Äá»ng",
    formTimeRequiredAlert: "TÃªn hoáº¡t Äá»ng vÃ  thá»i gian lÃ  báº¯t buá»c.",
    pageTitleLocation: "Dá»ch Vá»¥ Vá» TrÃ­",
    pageSubtitleLocation: "Sá»­ dá»¥ng báº£n Äá» tÆ°Æ¡ng tÃ¡c Äá» tÃ¬m ÄÆ°á»ng.",
    locationRefreshedSuccess: "ÄÃ£ cáº­p nháº­t vá» trÃ­ hiá»n táº¡i.",
    locationError: "Lá»i khi láº¥y vá» trÃ­: {message}",
    homeSetSuccess: "ÄÃ£ lÆ°u vá» trÃ­ nhÃ !",
    homeSetSpeech: "Vá» trÃ­ nhÃ  ÄÃ£ ÄÆ°á»£c thiáº¿t láº­p.",
    homeSetError: "KhÃ´ng thá» Äáº·t vá» trÃ­ nhÃ . KhÃ´ng rÃµ vá» trÃ­ hiá»n táº¡i.",
    guideHomeError: "KhÃ´ng thá» chá» ÄÆ°á»ng vá» nhÃ , khÃ´ng rÃµ vá» trÃ­ hiá»n táº¡i. HÃ£y thá»­ lÃ m má»i vá» trÃ­.",
    guideHomeNotSetInfo: "Vá» trÃ­ nhÃ  chÆ°a ÄÆ°á»£c Äáº·t. Vui lÃ²ng Äáº·t trÆ°á»c.",
    destinationMissingInfo: "Vui lÃ²ng nháº­p Äiá»m Äáº¿n.",
    notifyFamilySuccess: "MÃ´ phá»ng: Äang thÃ´ng bÃ¡o cho gia ÄÃ¬nh báº¡n táº¡i {emails} ráº±ng báº¡n sáº¯p rá»i Äi.",
    notifyFamilyNoEmails: "KhÃ´ng tÃ¬m tháº¥y email gia ÄÃ¬nh. Vui lÃ²ng thÃªm liÃªn há» trong CÃ i Äáº·t Gia ÄÃ¬nh Äá» gá»­i thÃ´ng bÃ¡o.",
    currentLocationTitle: "Vá» trÃ­ hiá»n táº¡i",
    findingLocation: "Äang tÃ¬m vá» trÃ­ cá»§a báº¡n...",
    latitude: "VÄ© Äá»",
    longitude: "Kinh Äá»",
    refreshLocationButton: "LÃ m má»i vá» trÃ­",
    homeSettingsTitle: "CÃ i Äáº·t nhÃ ",
    homeSetLocationInfo: "NhÃ  ÄÆ°á»£c Äáº·t táº¡i: VÄ© Äá» {lat}, Kinh Äá» {lon}",
    homeNotSetInfo: 'Vá» trÃ­ nhÃ  chÆ°a ÄÆ°á»£c Äáº·t. HÃ£y vá» nhÃ  vÃ  nháº¥p vÃ o "Äáº·t vá» trÃ­ hiá»n táº¡i lÃ m nhÃ ".',
    setHomeButton: "Äáº·t vá» trÃ­ hiá»n táº¡i lÃ m nhÃ ",
    saveLocationButton: "LÆ°u Äiá»m nÃ y",
    modalSaveLocationTitle: "LÆ°u Vá» TrÃ­ Hiá»n Táº¡i",
    modalEditLocationTitle: "Sá»­a TÃªn Vá» TrÃ­",
    formLocationNameLabel: "TÃªn vá» trÃ­",
    formLocationNamePlaceholder: "vÃ­ dá»¥: Lá»i vÃ o cÃ´ng viÃªn, ThÆ° viá»n",
    formSaveLocationButton: "LÆ°u Vá» TrÃ­",
    formUpdateLocationButton: "Cáº­p Nháº­t TÃªn",
    locationNameRequired: "TÃªn vá» trÃ­ lÃ  báº¯t buá»c.",
    locationSavedSuccess: 'ÄÃ£ lÆ°u vá» trÃ­ "{name}" thÃ nh cÃ´ng.',
    savedLocationUpdatedSuccess: 'ÄÃ£ cáº­p nháº­t vá» trÃ­ "{name}" thÃ nh cÃ´ng.',
    locationDeletedInfo: "ÄÃ£ xÃ³a vá» trÃ­ ÄÃ£ lÆ°u.",
    confirmDeleteLocation: 'Báº¡n cÃ³ cháº¯c muá»n xÃ³a vá» trÃ­ ÄÃ£ lÆ°u "{name}" khÃ´ng?',
    savedPlacesSectionTitle: "Äá»a Äiá»m ÄÃ£ LÆ°u",
    noSavedPlaces: "Báº¡n chÆ°a lÆ°u Äá»a Äiá»m nÃ o. Sá»­ dá»¥ng nÃºt 'LÆ°u Äiá»m nÃ y' Äá» thÃªm má»t Äá»a Äiá»m.",
    guideHereButton: "Chá» ÄÆ°á»ng Äáº¿n ÄÃ¢y",
    navigationHelpTitle: "LÃªn Káº¿ Hoáº¡ch Lá» TrÃ¬nh",
    guideHomeButton: "Chá» ÄÆ°á»ng vá» nhÃ ",
    destinationLabel: "Báº¡n muá»n Äi ÄÃ¢u?",
    destinationPlaceholder: "vÃ­ dá»¥: BÆ°u Äiá»n, PhÃ²ng khÃ¡m bÃ¡c sÄ©",
    guideToDestinationButton: "Chá» ÄÆ°á»ng Äáº¿n ÄÃ­ch",
    gettingDirections: "Äang tÃ­nh toÃ¡n lá» trÃ¬nh...",
    directionsTitle: "CÃ¡c bÆ°á»c cá»§a lá» trÃ¬nh:",
    readDirectionsButton: "Äá»c chá» ÄÆ°á»ng",
    safetyActionsTitle: "HÃ nh Äá»ng an toÃ n",
    notifyFamilyButton: "ThÃ´ng bÃ¡o cho Gia ÄÃ¬nh",
    notifyFamilyEmailSubject: "Cáº­p Nháº­t Vá» TrÃ­ tá»« MemoryCare",
    notifyFamilyEmailBody: "TÃ´i Äang chia sáº» vá» trÃ­ hiá»n táº¡i cá»§a mÃ¬nh.\nVÄ© Äá»: {lat}\nKinh Äá»: {lon}\n\nXem trÃªn Google Maps: https://www.google.com/maps?q={lat},{lon}",
    mapError: "KhÃ´ng thá» táº£i báº£n Äá». Vui lÃ²ng kiá»m tra káº¿t ná»i vÃ  thá»­ láº¡i.",
    mapApiKeyError: "KhÃ³a API Goong (GOONG_API_KEY) chÆ°a ÄÆ°á»£c cáº¥u hÃ¬nh. KhÃ³a nÃ y khÃ¡c vá»i khÃ³a Gemini.",
    geocodeError: "KhÃ´ng thá» tÃ¬m tháº¥y vá» trÃ­ '{destination}'. Vui lÃ²ng thá»­ má»t tÃªn hoáº·c Äá»a chá» khÃ¡c.",
    directionsError: "KhÃ´ng thá» tÃ­nh toÃ¡n lá» trÃ¬nh. Äiá»m Äáº¿n cÃ³ thá» khÃ´ng thá» tiáº¿p cáº­n ÄÆ°á»£c.",
    pageTitleSettings: "CÃ i Äáº·t",
    pageSubtitleSettings: "Quáº£n lÃ½ cÃ i Äáº·t chung, danh báº¡ vÃ  dá»¯ liá»u á»©ng dá»¥ng.",
    addFamilyEmailButton: "ThÃªm Email",
    familyEmailInputPlaceholder: "Email cá»§a thÃ nh viÃªn gia ÄÃ¬nh",
    noFamilyEmails: "ChÆ°a cÃ³ thÃ nh viÃªn gia ÄÃ¬nh nÃ o ÄÆ°á»£c thÃªm.",
    familyEmailAddedSuccess: "ÄÃ£ thÃªm {email} vÃ o danh sÃ¡ch gia ÄÃ¬nh cá»§a báº¡n.",
    familyEmailExistsError: "{email} ÄÃ£ cÃ³ trong danh sÃ¡ch.",
    familyEmailInvalidError: "Vui lÃ²ng nháº­p má»t Äá»a chá» email há»£p lá».",
    familyEmailDeletedInfo: "ÄÃ£ xÃ³a {email} khá»i danh sÃ¡ch.",
    confirmDeleteEmail: "Báº¡n cÃ³ cháº¯c muá»n xÃ³a {email} khÃ´ng?",
    sharePlanButton: "Chia Sáº» Káº¿ Hoáº¡ch",
    sharePlanSuccess: "MÃ´ phá»ng: Káº¿ hoáº¡ch hÃ´m nay ÄÃ£ ÄÆ°á»£c gá»­i Äáº¿n {emails}.",
    sharePlanNoEmails: "KhÃ´ng tÃ¬m tháº¥y email gia ÄÃ¬nh. Vui lÃ²ng thÃªm liÃªn há» trong CÃ i Äáº·t Gia ÄÃ¬nh Äá» chia sáº» káº¿ hoáº¡ch cá»§a báº¡n.",
    sharePlanEmailSubject: "Káº¿ Hoáº¡ch HÃ ng NgÃ y tá»« MemoryCare",
    sharePlanEmailBodyHeader: "ÄÃ¢y lÃ  lá»ch trÃ¬nh cho ngÃ y hÃ´m nay:\n\n",
    familyContactsSectionTitle: "Danh báº¡ Gia ÄÃ¬nh",
    dataManagementTitle: "Quáº£n lÃ½ Dá»¯ liá»u",
    dataManagementSubtitle: "Sao lÆ°u dá»¯ liá»u cá»§a báº¡n ra tá»p hoáº·c khÃ´i phá»¥c tá»« báº£n sao lÆ°u.",
    exportDataButton: "Xuáº¥t Dá»¯ liá»u",
    importDataButton: "Nháº­p Dá»¯ liá»u",
    importConfirmTitle: "XÃ¡c nháº­n Nháº­p",
    importConfirmMessage: "Chá»n cÃ¡ch nháº­p dá»¯ liá»u. 'Há»£p nháº¥t' sáº½ thÃªm cÃ¡c má»¥c má»i vÃ  cáº­p nháº­t cÃ¡c má»¥c hiá»n cÃ³ tá»« tá»p. 'Ghi ÄÃ¨' sáº½ xÃ³a táº¥t cáº£ dá»¯ liá»u hiá»n táº¡i vÃ  thay tháº¿ báº±ng báº£n sao lÆ°u.",
    mergeDataButton: "Há»£p nháº¥t Dá»¯ liá»u",
    overwriteDataButton: "Ghi ÄÃ¨ Táº¥t cáº£ Dá»¯ liá»u",
    importSuccessMerge: "Há»£p nháº¥t dá»¯ liá»u thÃ nh cÃ´ng! á»¨ng dá»¥ng sáº½ táº£i láº¡i ngay bÃ¢y giá».",
    importSuccessOverwrite: "Ghi ÄÃ¨ dá»¯ liá»u thÃ nh cÃ´ng! á»¨ng dá»¥ng sáº½ táº£i láº¡i ngay bÃ¢y giá».",
    importErrorInvalidFile: "Nháº­p tháº¥t báº¡i. Tá»p ÄÃ£ chá»n khÃ´ng pháº£i lÃ  tá»p sao lÆ°u MemoryCare há»£p lá».",
    importErrorReadFile: "Nháº­p tháº¥t báº¡i. KhÃ´ng thá» Äá»c tá»p ÄÃ£ chá»n.",
    aiWelcomeMessage: "Xin chÃ o! TÃ´i lÃ  trá»£ lÃ½ thÃ¢n thiá»n cá»§a báº¡n. HÃ´m nay tÃ´i cÃ³ thá» giÃºp báº¡n nhá» Äiá»u gÃ¬?",
    aiPlaceholder: "Há»i tÃ´i má»t cÃ¢u há»i...",
    pageTitleMyStory: "CÃ¢u Chuyá»n Cá»§a TÃ´i",
    pageSubtitleMyStory: "Má»t cÃ¢u chuyá»n sá»ng Äá»ng vá» cuá»c Äá»i báº¡n, ÄÆ°á»£c cáº­p nháº­t vá»i má»i kÃ½ á»©c báº¡n chia sáº».",
    myStoryAIQuestionTitle: "CÃ¢u Há»i Cho HÃ´m Nay",
    myStoryYourAnswerTitle: "CÃ¢u Tráº£ Lá»i Cá»§a Báº¡n",
    myStoryAnswerPlaceholder: "Chia sáº» suy nghÄ© vÃ  kÃ½ á»©c cá»§a báº¡n á» ÄÃ¢y...",
    myStorySaveAndUpdateButton: "Cáº­p Nháº­t CÃ¢u Chuyá»n",
    myStoryTitle: "CÃ¢u Chuyá»n Cuá»c Äá»i TÃ´i",
    myStoryInitialStory: "CÃ¢u chuyá»n cá»§a báº¡n sáº½ ÄÆ°á»£c viáº¿t á» ÄÃ¢y khi báº¡n tráº£ lá»i cÃ¡c cÃ¢u há»i. HÃ£y báº¯t Äáº§u báº±ng cÃ¡ch tráº£ lá»i cÃ¢u há»i Äáº§u tiÃªn.",
    myStoryLoadingStory: "Äang dá»t nÃªn cÃ¢u chuyá»n tuyá»t Äáº¹p tá»« kÃ½ á»©c cá»§a báº¡n...",
    myStoryLoadingQuestion: "Äang nghÄ© má»t cÃ¢u há»i má»i cho báº¡n...",
    myStoryMicrophoneButtonStart: "Ghi Ãm CÃ¢u Tráº£ Lá»i",
    myStoryMicrophoneButtonStop: "Dá»«ng Ghi Ãm",
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useLocalStorage<Language>('language', 'vi');

  const t = useCallback((key: keyof typeof translations['en'], ...args: (string | number)[]) => {
    let translation = translations[language]?.[key] || translations['en'][key];
    
    // Sequentially replace placeholders to avoid issues with global regex state
    args.forEach(arg => {
        translation = translation.replace(/\{[^{}]+\}/, String(arg));
    });

    return translation;
  }, [language]);


  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useTranslation = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useTranslation must be used within a LanguageProvider');
  }
  return context;
};
